#This VBA was created in my service to a past employer to take a csv file and import it into excel and create a customer aging (to show current, and past due invoices).
It then adds some columns, inserts calculation formulas, and uses CASE statements and FOR loops 
to determine if a customer is current or past due on their account for a specific invoice.  
Variables were created to count the rows of data needed because each csv file is a different size.
Lastly, it formats the information and top row on the spreadsheet for easier reading. 
This project was necessary because the system was not calculating late payments correctly due to different customers
having different payment terms (net10 days, net30 days, net60 days ect...)

Sub Aging_by_customer_terms()

Dim r As Range
Dim a As Long
Dim result As String

Dim SummaryRow As Range
Dim cell As Range
Dim str As String
Dim mysetting As Integer


Dim Agingdate As String * 8

Agingdate = InputBox("Enter a date in the following format: 12/31/18", "Enter an aging date")

If Agingdate = "" Then
Exit Sub

End If

If Application.Calculation = xlManual Then
    Application.Calculation = xlAutomatic
    mysetting = 1
End If
   

ActiveSheet.Name = "Sheet1"

Application.ScreenUpdating = False

Range("A1").Select
 
 
 
 ' Delete the top 5 rows and empty columns
 If Range("A1").Value <> ("CoCd") Then
    Rows("1:5").Select
    Selection.Delete Shift:=xlUp
    Columns("A:B").Select
    Selection.Delete Shift:=xlToLeft
    Columns("C:D").Select
    Selection.Delete Shift:=xlToLeft
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    Columns("G:G").Select
    Selection.Delete Shift:=xlToLeft
    Range("A1").Select
    
   End If
   
   '   Loop through all columns and trim headers
    For Each cell In Rows(1).SpecialCells(2)
        cell = Application.Trim(cell)
    Next
   
    ' Insert a Column after "Account" for Customer name and perform Vlookup to customer name file on H drive WorksheetFunction.Vlookup
Columns("C").Insert Shift:=xlToRight, _
      CopyOrigin:=xlFormatFromLeftOrAbove
      
       Range("C1").Value = ("Customer")
    


' Delete empty rows
Dim LastRow As Long
Dim x As Long
  
    LastRow = ActiveSheet.UsedRange.Rows.Count + ActiveSheet.UsedRange.Rows(1).Row - 2
    
    For x = LastRow To 1 Step -1
    If Application.WorksheetFunction.CountA(Rows(x)) = 0 Then
        Rows(x).Delete
      
    End If
    
    Next x
    



Range("C2").Select
    Range("C2").Value = ("=INDEX('B:\Accounts Receivable\AR\[Customer Numbers.xlsx]Cust Names'!B:B,MATCH(B2,'B:\Accounts Receivable\AR\[Customer Numbers.xlsx]Cust Names'!A:A,0))")
    Range("C2").Select
   Selection.AutoFill Destination:=Range("C2:C" & LastRow)
 
 
 'Insert Column to retrieve customer terms
 
 Columns("N").Insert Shift:=xlToRight, _
     CopyOrigin:=xlFormatFromLeftOrAbove
     
    Range("N1").Value = ("Terms")
    Range("N2").Select

    ActiveCell.FormulaR1C1 = "=Right(RC[-1],2)"
    Selection.AutoFill Destination:=Range("N2:N" & LastRow)

 'Insert 2 columns for baseline days formula and age bucket
 
    Columns("S:T").Insert Shift:=xlToRight, _
     CopyOrigin:=xlFormatFromLeftOrAbove
'
      Range("S1").Value = ("Arrears Calc.")
      Range("T1").Value = ("Age Bucket")
'
      Columns("S:S").Select
    Selection.NumberFormat = "0"
    Range("S2").Select
    'ActiveCell.FormulaR1C1 = "=" """Agingdate""" "-RC[-4]"

        ActiveCell.FormulaR1C1 = _
        "=IF(IFERROR(RC[5]<>""RZ""," & Chr(34) & Agingdate & Chr(34) & "-RC[-4]),RC[-3],IFERROR(" & Chr(34) & Agingdate & Chr(34) & "-(RC[-4]+RC[-5])," & Chr(34) & Agingdate & Chr(34) & "-RC[-4]))"
        
    Range("S2").Select
    Selection.AutoFill Destination:=Range("S2:S" & LastRow)
    
    Columns("S:S").Select
    Selection.NumberFormat = "0"
    
    Range("S3:S" & LastRow).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
       :=False, Transpose:=False
    Application.CutCopyMode = False

    
    Range("S2").Select

    Set r = Range("S2:S" & LastRow)
    For Each r In r.Cells
        Select Case r.Value
            Case Is < 1
            result = " Current"
            Case 1 To 30
            result = "1 to 30"
            Case 31 To 60
            result = "31 to 60"
            Case 61 To 90
            result = "61 to 90"
            Case 91 To 120
            result = "91 to 120"
            Case Is > 120
            result = "Over 121"

            Case Else
            result = ""
            
            End Select

    r.Offset(0, 1).Value = result
    Next r


 'Bold font top row
    Rows("1:1").Select
    Selection.Font.Bold = True


  ' Autofit entire sheet
    Cells.Select
    Cells.EntireColumn.AutoFit



'Copy Columns C, R, and S as values
 Columns("C:C").Select
 With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    


    Columns("N:N").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    
    Range("N3:N" & LastRow).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    
    Range("C3:C" & LastRow).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
       :=False, Transpose:=False
    Application.CutCopyMode = False
    
    Range("T3:T" & LastRow).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False

    ' Delete the connection to the text file
    Do While ActiveWorkbook.Connections.Count > 0
      ActiveWorkbook.Connections.Item(ActiveWorkbook.Connections.Count).Delete
   Loop

 Range("A1").Select
 'Delete last row in column R. To get rid of the total created by report.
Selection.End(xlDown).Select
ActiveCell.Offset(1).Select
Rows(ActiveCell.Row & ":" & Rows.Count).Delete



Columns("C:C").Select
    Selection.Replace What:="#N/A", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
 


Range("A1").Select

    
    If mysetting = 1 Then
    Application.Calculation = xlManual
End If

  Application.ScreenUpdating = True
  
  
Range("A1").Select
With ActiveWindow
        .SplitColumn = 0
        .SplitRow = 1
    End With
    ActiveWindow.FreezePanes = True
    
End Sub
